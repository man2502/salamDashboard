[{"D:\\Desktop\\Anvar\\salamDashboard\\src\\index.js":"1","D:\\Desktop\\Anvar\\salamDashboard\\src\\reportWebVitals.js":"2","D:\\Desktop\\Anvar\\salamDashboard\\src\\App.js":"3","D:\\Desktop\\Anvar\\salamDashboard\\src\\redux\\redux-store.js":"4","D:\\Desktop\\Anvar\\salamDashboard\\src\\redux\\dashboard-reducer.js":"5","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\DashboardContainer.jsx":"6","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Sidebar\\Sidebar.jsx":"7","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\Dashboard.jsx":"8","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\UsersDetail\\UsersDetail.jsx":"9","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\UsersCount\\UsersCount.jsx":"10","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\MainGraphic.jsx":"11","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\Dropdown\\Dropdown.jsx":"12","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\Graphic\\Graphic.jsx":"13","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\Legend\\Legend.jsx":"14","D:\\Desktop\\Anvar\\salamDashboard\\src\\api\\api.js":"15","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Users\\Users.jsx":"16","D:\\Desktop\\Anvar\\salamDashboard\\src\\redux\\users-reducer.js":"17","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Users\\UsersContainer.jsx":"18","D:\\Desktop\\Anvar\\salamDashboard\\src\\hoc\\withSuspens.js":"19"},{"size":753,"mtime":1613220300281,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1613220300289,"results":"22","hashOfConfig":"21"},{"size":1092,"mtime":1613346193035,"results":"23","hashOfConfig":"21"},{"size":434,"mtime":1613337440216,"results":"24","hashOfConfig":"21"},{"size":3000,"mtime":1613346345685,"results":"25","hashOfConfig":"21"},{"size":799,"mtime":1613333495955,"results":"26","hashOfConfig":"21"},{"size":1414,"mtime":1613220300281,"results":"27","hashOfConfig":"21"},{"size":887,"mtime":1613337934690,"results":"28","hashOfConfig":"21"},{"size":3717,"mtime":1613338478792,"results":"29","hashOfConfig":"21"},{"size":1676,"mtime":1613333965421,"results":"30","hashOfConfig":"21"},{"size":2036,"mtime":1613330824147,"results":"31","hashOfConfig":"21"},{"size":987,"mtime":1613220300281,"results":"32","hashOfConfig":"21"},{"size":1797,"mtime":1613333982621,"results":"33","hashOfConfig":"21"},{"size":977,"mtime":1613220300281,"results":"34","hashOfConfig":"21"},{"size":684,"mtime":1613336700660,"results":"35","hashOfConfig":"21"},{"size":1159,"mtime":1613337852062,"results":"36","hashOfConfig":"21"},{"size":1070,"mtime":1613346360295,"results":"37","hashOfConfig":"21"},{"size":779,"mtime":1613337744759,"results":"38","hashOfConfig":"21"},{"size":257,"mtime":1613343867309,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pejcly",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop\\Anvar\\salamDashboard\\src\\index.js",[],"D:\\Desktop\\Anvar\\salamDashboard\\src\\reportWebVitals.js",[],"D:\\Desktop\\Anvar\\salamDashboard\\src\\App.js",[],"D:\\Desktop\\Anvar\\salamDashboard\\src\\redux\\redux-store.js",[],"D:\\Desktop\\Anvar\\salamDashboard\\src\\redux\\dashboard-reducer.js",["88"],"D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\DashboardContainer.jsx",["89"],"import React, { useState } from \"react\"\r\nimport Dashboard from \"./Dashboard\"\r\nimport { connect } from \"react-redux\"\r\nimport {setScale} from \"./../../redux/dashboard-reducer\"\r\nclass DashboardContainer extends React.Component {\r\n\r\n    render(){\r\n\r\n    return(\r\n        <Dashboard  graphicData ={this.props.graphicData} \r\n                    graphicScale={this.props.graphicScale}\r\n                    setScale = {this.props.setScale}/>\r\n    )\r\n} \r\n}\r\nconst mapStateToProps =(state)=>{\r\n    return {\r\n        graphicData: state.dashboard.dashboardCategory,\r\n        activeGraphicScale: state.dashboard.activeGraphicScale,\r\n        graphicScale: state.dashboard.graphicScale[state.dashboard.activeGraphicScale]\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps,{\r\n    setScale\r\n})(DashboardContainer)",["90","91"],"D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Sidebar\\Sidebar.jsx",[],"D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\Dashboard.jsx",["92","93","94"],"import React, { useState } from \"react\"\r\nimport MainGraphic from \"./MainGraphic/MainGraphic\"\r\nimport UsersCount from \"./UsersCount/UsersCount\"\r\nimport UsersDetail from \"./UsersDetail/UsersDetail\"\r\nimport s from \"./Dashboard.module.css\"\r\nimport { getUsersDataThunk } from \"../../redux/dashboard-reducer\"\r\n\r\nclass Dashboard extends React.Component {\r\n    componentDidMount(){\r\n        const thiss = this\r\n        const i = 0\r\n        setInterval(function(){\r\n            thiss.setState({\r\n                new: i + 1 \r\n            })\r\n        }, 30000)\r\n        if (i ==100 ) i = 0\r\n        getUsersDataThunk()\r\n    }\r\n    render(){\r\n      \r\n    return (\r\n        \r\n        <div className={s.wrapper}> \r\n            <MainGraphic {...this.props}/>\r\n            <UsersCount {...this.props}/>\r\n            <UsersDetail {...this.props}/>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Dashboard","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\UsersDetail\\UsersDetail.jsx",["95"],"import React, { useState } from \"react\"\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport styles from \"./../Dashboard.module.css\"\r\nimport s from \"./UsersDetail.module.css\"\r\n \r\nconst UsersDetail = (props) => {\r\n    const [expandMode, setExpandMode] = useState(false);\r\n    const show = () => {\r\n        expandMode ? setExpandMode(false) : setExpandMode(true)\r\n    }\r\n\r\n    const getDate = () => {\r\n        let newDate = new Date()\r\n        let date = newDate.getDate()\r\n        let month = newDate.getMonth()\r\n        let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n        let currentMonth = months[month + 1]\r\n        return {\r\n            currentMonth,\r\n            date\r\n        }\r\n    }\r\n\r\n    const dashboardInfo = [\r\n        { id: 0, fullName: \"Users Summary\", name: \"Overall\", color: \"#F25DE3\", description: \"total quantity for range\" },\r\n        { id: 1, fullName: \"Online Now\", name: \"Online\", color: \"#FF9E01\", description: \"maximum online for range\" },\r\n        { id: 2, fullName: \"New Users\", name: \"New\", color: \"#27FFD8\", description: \"new registered users for range\" }\r\n    ]\r\n    const calcheight = () => {\r\n        return (document.documentElement.clientHeight * 16 / 100)\r\n    }\r\n\r\n    const graphicData = [\r\n        props.graphicScale.data[props.graphicScale.data.length - 1].pv,\r\n        props.graphicScale.data[props.graphicScale.data.length - 1].uv,\r\n        props.graphicScale.data[props.graphicScale.data.length - 1].amt\r\n\r\n    ]\r\n    return (\r\n        <div onClick={() => { show() }} style={{ height: calcheight() }} className={expandMode ? styles.largeDashboardWrapperThird : styles.dashboardWrapper}>{/**/}\r\n            <div className={styles.dashboard + \" \" + s.content}>\r\n                <Row >\r\n                    <Col lg={3} md={3}>\r\n                        <Row>\r\n                            <Col>\r\n                                <div style={{ textAlign: \"center\" }}>\r\n                                    <div className={s.mainTitle}>{getDate().date}</div>\r\n                                    <div style={{ letterSpacing: \"1px\", textTransform: \"uppercase\" }} className=\"titleSmall\">{getDate().currentMonth}</div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                circle\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Col>\r\n                    <Col lg={9} md={9}>\r\n                        <Row>\r\n                            {dashboardInfo.map(p => {\r\n                                return (\r\n                                    <Col lg={4} md={4} className={s.infoItem}>\r\n                                        <Spring\r\n                                            config={{ duration: 1000 }}\r\n                                            from={{ number: 0 }}\r\n                                            to={{ number: graphicData[p.id] }}>\r\n                                            {anim => <div className={s.infoItemWrapper}>\r\n                                                <div className={s.mainTitle}>{anim.number.toFixed()}</div>\r\n                                                <div className={s.secondaryTitle + \" \" + \"titleSmall\"}>{p.fullName}</div>\r\n                                            </div>}\r\n                                        </Spring>\r\n                                    </Col>\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersDetail","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\UsersCount\\UsersCount.jsx",["96","97"],"import React, { useState } from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport styles from \"../Dashboard.module.css\"\r\nimport s from \"./UsersCount.module.css\"\r\nimport {config, Spring} from 'react-spring/renderprops'\r\n\r\n\r\nconst UsersCount = (props) => {\r\n\r\n    const [expandMode, setExpandMode] = useState(false);\r\n    const show = () => {\r\n        expandMode ? setExpandMode(false) : setExpandMode(true)\r\n    }\r\n    const calcheight = () => {\r\n        return (document.documentElement.clientHeight * 20 / 100)\r\n    }\r\n    \r\n    return (\r\n        <div onClick={() => { show() }} style={{ height: calcheight() }} className={expandMode ? styles.largeDashboardWrapperSecond : styles.dashboardWrapper}>\r\n            <div className={styles.dashboard}>\r\n                <div className={s.content}>\r\n                    <Row>\r\n                        <Col lg={1} md={1}>\r\n                            <span className={s.title + ' ' + \"titleSmall\"}>Users</span>\r\n                        </Col>\r\n                        <Col lg={11} md={11}>\r\n                            <div>\r\n                                <Spring\r\n                                    config ={{duration: 1000}}\r\n                                    from={{ number: 0 }}\r\n                                    to={{ number: props.graphicScale.data[props.graphicScale.data.length-1].uv }}>\r\n                                    {anim => <h1>{anim.number.toFixed()}</h1>}\r\n                                </Spring>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UsersCount","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\MainGraphic.jsx",["98"],"import React, { useState } from \"react\"\r\nimport styles from \"./../Dashboard.module.css\"\r\nimport Dropdown from \"./Dropdown/Dropdown\";\r\nimport Graphic from \"./Graphic/Graphic\";\r\nimport Legend from \"./Legend/Legend\";\r\nimport s from \"./MainGraphic.module.css\"\r\nimport classNames from \"classnames/bind\"\r\n\r\nconst MainGraphic = (props) => {\r\n    const [expandMode, setExpandMode] = useState(false);\r\n    const [clickCount, setClickCount] = useState(0);\r\n    const show = () => {\r\n        expandMode ? setExpandMode(false) : setExpandMode(true)\r\n        setClickCount(1)\r\n    }\r\n    const calcheight = () => {\r\n        return (document.documentElement.clientHeight * 32 / 100)\r\n    } \r\n    const cx = classNames.bind(styles)\r\n    const className= cx({\r\n        largeDashboardWrapperFirst: expandMode,\r\n        dashboardWrapper :!expandMode,\r\n        // largeDashboardWrapperFirstReverse: !expandMode&&clickCount>0\r\n\r\n    })\r\n    return (\r\n        <div style={{ height: calcheight(), padding: 0 }} className={className}>\r\n            <div className={styles.dashboard + \" \" + s.wrapper}>\r\n                <div className={styles.mainGraphicContent}>\r\n                    <Dropdown graphicScale={props.graphicScale} graphicData={props.graphicData} setScale={props.setScale}/>\r\n                    <div onClick={() => { show() }}>\r\n                        <Legend graphicData={props.graphicData}/>\r\n                    </div>\r\n                </div>\r\n                <div onClick={() => { show() }}>\r\n                    <Graphic \r\n                        graphicScale ={props.graphicScale} \r\n                        graphicData={props.graphicData} \r\n                        expandMode={expandMode} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// const putStyle= ()=>{\r\n        \r\n//     if (!expandMode && clickCount>0) return {...styles.dashboardWrapper,...styles.largeDashboardWrapperFirst,...styles.reverseAnim} \r\n//      else return  styles.largeDashboardWrapperFirst\r\n//  }\r\nexport default MainGraphic\r\n\r\n\r\n","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\Dropdown\\Dropdown.jsx",["99","100","101"],"import React, { useState } from \"react\"\r\nimport s from \"./Dropdown.module.css\"\r\n\r\nconst Dropdown = (props) => {\r\n    const [extraMenu, setExtraMenu] = useState(false)\r\n    const show = () => {\r\n        (extraMenu) ? setExtraMenu(false) : setExtraMenu(true)\r\n    }\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.dropdownTitle+\" \" +\"titleSmall\"}>Statistics for last \r\n                <span onClick={()=>{show()}} className={s.dropdownToggle}>{props.graphicScale.name}</span>\r\n            </div>\r\n            \r\n            <div style={extraMenu? {display: \"block\"}:{display:\"none\"}} className={s.dropdownMenu}>\r\n                <div onClick={()=>{props.setScale(0); setExtraMenu(false)}} className={s.dropdownItem + \" \" + \"titleSmall\"}>Year</div>\r\n                <div onClick={()=>{props.setScale(1); setExtraMenu(false)}} className={s.dropdownItem + \" \" + \"titleSmall\"}>Week</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dropdown","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\Graphic\\Graphic.jsx",["102","103"],"import React, { PureComponent } from \"react\"\r\nimport s from \"./Graphic.module.css\"\r\nimport {\r\n    LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n} from 'recharts';\r\n\r\n\r\n\r\n\r\nexport default class Graphic extends PureComponent {\r\n    calcheight (h){\r\n        return( document.documentElement.clientHeight*h/100)\r\n         \r\n    }\r\n    \r\n    render() {\r\n        \r\n        const base = this.props.graphicData;\r\n        const activeStyle= {\r\n            transform: 'scale(0.96) translateX(-2%)',\r\n        }\r\n        return (\r\n            <div style={this.props.expandMode? activeStyle:{}} className={s.wrapper}>\r\n                <ResponsiveContainer width=\"100%\" height={this.props.expandMode?this.calcheight(22): this.calcheight(14)}>\r\n                    <LineChart\r\n                        data={this.props.graphicScale.data}\r\n                        margin={{\r\n                            top: 5, right: 0, left: 0, bottom: 0,\r\n                        }}\r\n                    >\r\n                        <XAxis hide={true} dataKey=\"name\" />\r\n                        <YAxis hide={true} />\r\n                        <Tooltip isAnimationActive={false}  cursor={{ stroke: '#fff', strokeWidth: 1 }} contentStyle={{ background: \"rgba(0, 140, 253,0.7)\", fontWeight: \"bold\", borderRadius: \"4px\" }} />\r\n                        {/* <Legend /> */}\r\n                        <Line dot={false} dataKey=\"pv\" stroke={base[0].color} strokeWidth={3} />\r\n                        <Line dot={false} dataKey=\"uv\" stroke={base[1].color} strokeWidth={3} />\r\n                        <Line dot={false} dataKey=\"amt\" stroke={base[2].color} strokeWidth={3} />\r\n                    </LineChart>\r\n                </ResponsiveContainer>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Dashboard\\MainGraphic\\Legend\\Legend.jsx",["104"],"import React from \"react\"\r\nimport { Col, Row } from \"react-bootstrap\"\r\nimport s from \"./Legend.module.css\"\r\n\r\nconst Legend = (props) => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <Row>\r\n                {props.graphicData.map(i => {\r\n                    return (\r\n                        <Col>\r\n                            <div className={s.item}>\r\n                                <span className={s.circle} style={{backgroundColor:i.color}}></span>\r\n                                <div className={s.titles + \" \" + \"titleSmall\"}>\r\n                                    <div className={s.firstTitle} style={{color:i.color}}>{i.name}</div>\r\n                                    <div className={s.description}>{i.description}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    )\r\n                })}\r\n\r\n\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Legend","D:\\Desktop\\Anvar\\salamDashboard\\src\\api\\api.js",[],"D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Users\\Users.jsx",[],"D:\\Desktop\\Anvar\\salamDashboard\\src\\redux\\users-reducer.js",["105"],"D:\\Desktop\\Anvar\\salamDashboard\\src\\components\\Users\\UsersContainer.jsx",["106","107","108"],"import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { getUsersDataThunk } from \"../../redux/users-reducer\"\r\nimport Users from \"./Users\"\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount(){\r\n        const thiss = this\r\n        const i = 0\r\n        setInterval(function(){\r\n            thiss.setState({\r\n                counter: i + 1 \r\n            })\r\n        }, 30000)\r\n        if (i ==100 ) i = 0\r\n\r\n        // getUsersDataThunk()\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <Users users ={this.props.users}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps =(state)=>{\r\n    \r\n    return{\r\n        users: state.users.usersData\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,\r\n    {}    \r\n)(UsersContainer)","D:\\Desktop\\Anvar\\salamDashboard\\src\\hoc\\withSuspens.js",[],{"ruleId":"109","severity":1,"message":"110","line":112,"column":33,"nodeType":"111","messageId":"112","endLine":112,"endColumn":35},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":17,"column":15,"nodeType":"111","messageId":"112","endLine":17,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":17,"column":23,"nodeType":"115","messageId":"123","endLine":17,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":69,"column":88,"nodeType":"111","messageId":"126","endLine":69,"endColumn":89},{"ruleId":"113","severity":1,"message":"127","line":5,"column":9,"nodeType":"115","messageId":"116","endLine":5,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":24,"column":60,"nodeType":"111","messageId":"126","endLine":24,"endColumn":61},{"ruleId":"113","severity":1,"message":"128","line":11,"column":12,"nodeType":"115","messageId":"116","endLine":11,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":11,"column":49,"nodeType":"111","messageId":"126","endLine":11,"endColumn":50},{"ruleId":"124","severity":1,"message":"125","line":16,"column":109,"nodeType":"111","messageId":"126","endLine":16,"endColumn":110},{"ruleId":"124","severity":1,"message":"125","line":17,"column":109,"nodeType":"111","messageId":"126","endLine":17,"endColumn":110},{"ruleId":"113","severity":1,"message":"129","line":4,"column":36,"nodeType":"115","messageId":"116","endLine":4,"endColumn":49},{"ruleId":"113","severity":1,"message":"130","line":4,"column":60,"nodeType":"115","messageId":"116","endLine":4,"endColumn":66},{"ruleId":"124","severity":1,"message":"125","line":14,"column":64,"nodeType":"111","messageId":"126","endLine":14,"endColumn":65},{"ruleId":"109","severity":1,"message":"110","line":41,"column":33,"nodeType":"111","messageId":"112","endLine":41,"endColumn":35},{"ruleId":"113","severity":1,"message":"131","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":27},{"ruleId":"109","severity":1,"message":"110","line":16,"column":15,"nodeType":"111","messageId":"112","endLine":16,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":16,"column":23,"nodeType":"115","messageId":"123","endLine":16,"endColumn":24},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-const-assign","'i' is constant.","const","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'config' is defined but never used.","'clickCount' is assigned a value but never used.","'CartesianGrid' is defined but never used.","'Legend' is defined but never used.","'getUsersDataThunk' is defined but never used.","no-global-assign","no-unsafe-negation"]